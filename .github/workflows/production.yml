name: Build Demo Workflow Production
on:
  push:
    branches:
      - deploy/production
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('package-lock.json') }}-
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm install && npm install env-cmd
      - name: Build
        run: |
          npm run build
      - name: List directory contents
        run: ls -la
      - name: Copy build to Server
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP_PROXY: ${{ secrets.SERVER_IP_PROXY }}
          SERVER_IP: ${{ secrets.SERVER_IP_PRODUCTION }}
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP_PROXY }} "rm -rf /home/hrm-frontend-production/public_html/.next"
          ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP_PROXY }} "mkdir -p /home/hrm-frontend-production/public_html/.next"
          ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP_PROXY }} "ls -la /home/hrm-frontend-production/public_html"
          rsync -avz -e "ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" .next/ root@${{ env.SERVER_IP_PROXY }}:/home/hrm-frontend-production/public_html/.next/
          ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP_PROXY }} "rsync -avz -e 'ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no' /home/hrm-frontend-production/public_html/.next/ root@${{ env.SERVER_IP }}:/home/hrm-frontend/public_html/.next/"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SERVER_IP_PROXY: ${{ secrets.SERVER_IP_PROXY }}
      SERVER_IP: ${{ secrets.SERVER_IP_PRODUCTION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{env.SERVER_IP_PROXY}} "echo 'SSH connection successful'"
      - name: Pull code github
        run: ssh -p 8282 -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP_PROXY }} "ssh -p 8282 root@${{ env.SERVER_IP }} 'cd /home/hrm-frontend/public_html/ && git pull origin deploy/production' "
      - name: Install dependencies
        run: ssh -p 8282 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{env.SERVER_IP_PROXY}} "ssh -p 8282 root@${{ env.SERVER_IP }}  'cd /home/hrm-frontend/public_html/ && npm install && npm install env-cmd'"
      - name: Restart PM2 Application
        run: |
          ssh -p 8282 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{env.SERVER_IP_PROXY}} "ssh -p 8282 root@${{ env.SERVER_IP }}  'cd /home/hrm-frontend/public_html/ && pm2 restart hrm'"
      - name: Check server status
        run: ssh -p 8282 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@${{env.SERVER_IP_PROXY}} "ssh -p 8282 root@${{ env.SERVER_IP }}  'cd /home/hrm-frontend/public_html/ && pm2 status'"
      - name: Notify Slack
        if: always()
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN_KEY }}
        run: |
          STATUS="Success"
          if [ "${{ job.status }}" != "success" ]; then
            STATUS="Failed"
          fi
          curl -X POST -H "Authorization: Bearer ${{env.SLACK_TOKEN}}" -H "Content-Type: application/json" \
          --data "{\"channel\":\"#cicd-hrm\",\"text\":\"Deploy Frontend Production *${STATUS}* \nCI/CD Pipeline *${STATUS}* on branch *${{ github.ref_name }}* for repository *${{ github.repository }}*.\nCheck details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
          https://slack.com/api/chat.postMessage
